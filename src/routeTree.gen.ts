/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/app/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as AppTeamIndexImport } from './routes/app/team/index'
import { Route as AppSettingIndexImport } from './routes/app/setting/index'
import { Route as AppPlayersIndexImport } from './routes/app/players/index'
import { Route as AppMatchesIndexImport } from './routes/app/matches/index'
import { Route as AppDashboardIndexImport } from './routes/app/dashboard/index'
import { Route as AppAuctionIndexImport } from './routes/app/auction/index'
import { Route as AppAccountIndexImport } from './routes/app/account/index'
import { Route as AppTeamTeamIdImport } from './routes/app/team/$teamId'
import { Route as AppPlayersPlayerIdImport } from './routes/app/players/$playerId'
import { Route as AppMatchesMatchIdImport } from './routes/app/matches/$matchId'
import { Route as AppAuctionPlayersGetImport } from './routes/app/auction/players/get'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

const AppTeamIndexRoute = AppTeamIndexImport.update({
  id: '/team/',
  path: '/team/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSettingIndexRoute = AppSettingIndexImport.update({
  id: '/setting/',
  path: '/setting/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppPlayersIndexRoute = AppPlayersIndexImport.update({
  id: '/players/',
  path: '/players/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppMatchesIndexRoute = AppMatchesIndexImport.update({
  id: '/matches/',
  path: '/matches/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppDashboardIndexRoute = AppDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAuctionIndexRoute = AppAuctionIndexImport.update({
  id: '/auction/',
  path: '/auction/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAccountIndexRoute = AppAccountIndexImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppTeamTeamIdRoute = AppTeamTeamIdImport.update({
  id: '/team/$teamId',
  path: '/team/$teamId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppPlayersPlayerIdRoute = AppPlayersPlayerIdImport.update({
  id: '/players/$playerId',
  path: '/players/$playerId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppMatchesMatchIdRoute = AppMatchesMatchIdImport.update({
  id: '/matches/$matchId',
  path: '/matches/$matchId',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppAuctionPlayersGetRoute = AppAuctionPlayersGetImport.update({
  id: '/auction/players/get',
  path: '/auction/players/get',
  getParentRoute: () => AppRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof rootRoute
    }
    '/app/matches/$matchId': {
      id: '/app/matches/$matchId'
      path: '/matches/$matchId'
      fullPath: '/app/matches/$matchId'
      preLoaderRoute: typeof AppMatchesMatchIdImport
      parentRoute: typeof AppRouteImport
    }
    '/app/players/$playerId': {
      id: '/app/players/$playerId'
      path: '/players/$playerId'
      fullPath: '/app/players/$playerId'
      preLoaderRoute: typeof AppPlayersPlayerIdImport
      parentRoute: typeof AppRouteImport
    }
    '/app/team/$teamId': {
      id: '/app/team/$teamId'
      path: '/team/$teamId'
      fullPath: '/app/team/$teamId'
      preLoaderRoute: typeof AppTeamTeamIdImport
      parentRoute: typeof AppRouteImport
    }
    '/app/account/': {
      id: '/app/account/'
      path: '/account'
      fullPath: '/app/account'
      preLoaderRoute: typeof AppAccountIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/auction/': {
      id: '/app/auction/'
      path: '/auction'
      fullPath: '/app/auction'
      preLoaderRoute: typeof AppAuctionIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/dashboard/': {
      id: '/app/dashboard/'
      path: '/dashboard'
      fullPath: '/app/dashboard'
      preLoaderRoute: typeof AppDashboardIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/matches/': {
      id: '/app/matches/'
      path: '/matches'
      fullPath: '/app/matches'
      preLoaderRoute: typeof AppMatchesIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/players/': {
      id: '/app/players/'
      path: '/players'
      fullPath: '/app/players'
      preLoaderRoute: typeof AppPlayersIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/setting/': {
      id: '/app/setting/'
      path: '/setting'
      fullPath: '/app/setting'
      preLoaderRoute: typeof AppSettingIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/team/': {
      id: '/app/team/'
      path: '/team'
      fullPath: '/app/team'
      preLoaderRoute: typeof AppTeamIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/app/auction/players/get': {
      id: '/app/auction/players/get'
      path: '/auction/players/get'
      fullPath: '/app/auction/players/get'
      preLoaderRoute: typeof AppAuctionPlayersGetImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface AppRouteRouteChildren {
  AppMatchesMatchIdRoute: typeof AppMatchesMatchIdRoute
  AppPlayersPlayerIdRoute: typeof AppPlayersPlayerIdRoute
  AppTeamTeamIdRoute: typeof AppTeamTeamIdRoute
  AppAccountIndexRoute: typeof AppAccountIndexRoute
  AppAuctionIndexRoute: typeof AppAuctionIndexRoute
  AppDashboardIndexRoute: typeof AppDashboardIndexRoute
  AppMatchesIndexRoute: typeof AppMatchesIndexRoute
  AppPlayersIndexRoute: typeof AppPlayersIndexRoute
  AppSettingIndexRoute: typeof AppSettingIndexRoute
  AppTeamIndexRoute: typeof AppTeamIndexRoute
  AppAuctionPlayersGetRoute: typeof AppAuctionPlayersGetRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppMatchesMatchIdRoute: AppMatchesMatchIdRoute,
  AppPlayersPlayerIdRoute: AppPlayersPlayerIdRoute,
  AppTeamTeamIdRoute: AppTeamTeamIdRoute,
  AppAccountIndexRoute: AppAccountIndexRoute,
  AppAuctionIndexRoute: AppAuctionIndexRoute,
  AppDashboardIndexRoute: AppDashboardIndexRoute,
  AppMatchesIndexRoute: AppMatchesIndexRoute,
  AppPlayersIndexRoute: AppPlayersIndexRoute,
  AppSettingIndexRoute: AppSettingIndexRoute,
  AppTeamIndexRoute: AppTeamIndexRoute,
  AppAuctionPlayersGetRoute: AppAuctionPlayersGetRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/app/matches/$matchId': typeof AppMatchesMatchIdRoute
  '/app/players/$playerId': typeof AppPlayersPlayerIdRoute
  '/app/team/$teamId': typeof AppTeamTeamIdRoute
  '/app/account': typeof AppAccountIndexRoute
  '/app/auction': typeof AppAuctionIndexRoute
  '/app/dashboard': typeof AppDashboardIndexRoute
  '/app/matches': typeof AppMatchesIndexRoute
  '/app/players': typeof AppPlayersIndexRoute
  '/app/setting': typeof AppSettingIndexRoute
  '/app/team': typeof AppTeamIndexRoute
  '/app/auction/players/get': typeof AppAuctionPlayersGetRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/app/matches/$matchId': typeof AppMatchesMatchIdRoute
  '/app/players/$playerId': typeof AppPlayersPlayerIdRoute
  '/app/team/$teamId': typeof AppTeamTeamIdRoute
  '/app/account': typeof AppAccountIndexRoute
  '/app/auction': typeof AppAuctionIndexRoute
  '/app/dashboard': typeof AppDashboardIndexRoute
  '/app/matches': typeof AppMatchesIndexRoute
  '/app/players': typeof AppPlayersIndexRoute
  '/app/setting': typeof AppSettingIndexRoute
  '/app/team': typeof AppTeamIndexRoute
  '/app/auction/players/get': typeof AppAuctionPlayersGetRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/app/matches/$matchId': typeof AppMatchesMatchIdRoute
  '/app/players/$playerId': typeof AppPlayersPlayerIdRoute
  '/app/team/$teamId': typeof AppTeamTeamIdRoute
  '/app/account/': typeof AppAccountIndexRoute
  '/app/auction/': typeof AppAuctionIndexRoute
  '/app/dashboard/': typeof AppDashboardIndexRoute
  '/app/matches/': typeof AppMatchesIndexRoute
  '/app/players/': typeof AppPlayersIndexRoute
  '/app/setting/': typeof AppSettingIndexRoute
  '/app/team/': typeof AppTeamIndexRoute
  '/app/auction/players/get': typeof AppAuctionPlayersGetRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/auth/login'
    | '/auth/register'
    | '/app/matches/$matchId'
    | '/app/players/$playerId'
    | '/app/team/$teamId'
    | '/app/account'
    | '/app/auction'
    | '/app/dashboard'
    | '/app/matches'
    | '/app/players'
    | '/app/setting'
    | '/app/team'
    | '/app/auction/players/get'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/auth/login'
    | '/auth/register'
    | '/app/matches/$matchId'
    | '/app/players/$playerId'
    | '/app/team/$teamId'
    | '/app/account'
    | '/app/auction'
    | '/app/dashboard'
    | '/app/matches'
    | '/app/players'
    | '/app/setting'
    | '/app/team'
    | '/app/auction/players/get'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/auth/login'
    | '/auth/register'
    | '/app/matches/$matchId'
    | '/app/players/$playerId'
    | '/app/team/$teamId'
    | '/app/account/'
    | '/app/auction/'
    | '/app/dashboard/'
    | '/app/matches/'
    | '/app/players/'
    | '/app/setting/'
    | '/app/team/'
    | '/app/auction/players/get'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRouteRoute: typeof AppRouteRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRouteRoute: AppRouteRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/auth/login",
        "/auth/register"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app/route.tsx",
      "children": [
        "/app/matches/$matchId",
        "/app/players/$playerId",
        "/app/team/$teamId",
        "/app/account/",
        "/app/auction/",
        "/app/dashboard/",
        "/app/matches/",
        "/app/players/",
        "/app/setting/",
        "/app/team/",
        "/app/auction/players/get"
      ]
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx"
    },
    "/app/matches/$matchId": {
      "filePath": "app/matches/$matchId.tsx",
      "parent": "/app"
    },
    "/app/players/$playerId": {
      "filePath": "app/players/$playerId.tsx",
      "parent": "/app"
    },
    "/app/team/$teamId": {
      "filePath": "app/team/$teamId.tsx",
      "parent": "/app"
    },
    "/app/account/": {
      "filePath": "app/account/index.tsx",
      "parent": "/app"
    },
    "/app/auction/": {
      "filePath": "app/auction/index.tsx",
      "parent": "/app"
    },
    "/app/dashboard/": {
      "filePath": "app/dashboard/index.tsx",
      "parent": "/app"
    },
    "/app/matches/": {
      "filePath": "app/matches/index.tsx",
      "parent": "/app"
    },
    "/app/players/": {
      "filePath": "app/players/index.tsx",
      "parent": "/app"
    },
    "/app/setting/": {
      "filePath": "app/setting/index.tsx",
      "parent": "/app"
    },
    "/app/team/": {
      "filePath": "app/team/index.tsx",
      "parent": "/app"
    },
    "/app/auction/players/get": {
      "filePath": "app/auction/players/get.tsx",
      "parent": "/app"
    }
  }
}
ROUTE_MANIFEST_END */
